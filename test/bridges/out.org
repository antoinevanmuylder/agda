[QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 11383800814669833964), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "All" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "All" :| []}, nameBindingSite = Range (Just (AbsolutePath {textPath = "/home/antva/Documents/repos/agda-fork/test/bridges/All.agda"})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 72, posLine = 3, posCol = 8}, iEnd = Pn {srcFile = (), posPos = 75, posLine = 3, posCol = 11}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 11383800814669833964), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "decomposeInterval" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "decomposeInterval" :| []}, nameBindingSite = Range (Just (AbsolutePath {textPath = "/home/antva/Documents/repos/agda-fork/test/bridges/All.agda"})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 123, posLine = 8, posCol = 8}, iEnd = Pn {srcFile = (), posPos = 140, posLine = 8, posCol = 25}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 10 (ModuleNameHash 11383800814669833964), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "toDec" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "toDec" :| []}, nameBindingSite = Range (Just (AbsolutePath {textPath = "/home/antva/Documents/repos/agda-fork/test/bridges/All.agda"})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 164, posLine = 10, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 169, posLine = 10, posCol = 8}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}]